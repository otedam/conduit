{
  "uid" : "c3de71cfe82d28ef",
  "name" : "test_register_003",
  "fullName" : "test_conduit.test_vizsgaremek.TestConduitApp#test_register_003",
  "historyId" : "bdf5d5dcfc751ec2c9bdb65035975812",
  "time" : {
    "start" : 1628175175350,
    "stop" : 1628175179076,
    "duration" : 3726
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'GarFelhasznalo1' == 'Gktest145240'\n  - Gktest145240\n  + GarFelhasznalo1",
  "statusTrace" : "self = <test_vizsgaremek.TestConduitApp object at 0x7f3bb2f86e50>\n\n    def test_register_003(self):\n        conduit_cookie(self.browser)\n        self.browser.find_element_by_xpath(\"/html/body//a[contains(@href,'register')]\").click()\n        self.browser.find_element_by_xpath(\"//input[@type='text'][@placeholder='Username']\").send_keys(\"GarFelhasznalo1\")\n        self.browser.find_element_by_xpath(\"//input[@type='text'][@placeholder='Email']\").send_keys(\"GarFelhasznalo1@gmail.com\")\n        self.browser.find_element_by_xpath(\"//input[@placeholder='Password']\").send_keys(password)\n        # time.sleep(2)\n        # self.browser.find_element_by_css_selector(\".btn.btn-lg.btn-primary.pull-xs-right\").click()\n        button_reg = find_element(self.browser, By.CSS_SELECTOR, \".btn.btn-lg.btn-primary.pull-xs-right\")\n        button_reg.click()\n        # self.browser.find_element_by_xpath('//button[@class=\"btn login-btn\"]').click()\n        welcome = find_element(self.browser, By.CSS_SELECTOR, \".swal-title\")\n    \n        # welcome = WebDriverWait(self.browser, 5).until(\n        #     EC.visibility_of_element_located((By.CSS_SELECTOR, \".swal-title\"))\n        # )\n        welcome_text = welcome.text\n        # print(welcome_text)\n        assert welcome_text == \"Welcome!\"\n        self.browser.find_element_by_css_selector(\".swal-button.swal-button--confirm\").click()\n        nav_bar_list = self.browser.find_elements_by_css_selector(\"li.nav-item\")\n        logined_name = nav_bar_list[3].text\n        # print(logined_name)\n>       assert logined_name == regname\nE       AssertionError: assert 'GarFelhasznalo1' == 'Gktest145240'\nE         - Gktest145240\nE         + GarFelhasznalo1\n\ntest_conduit/test_vizsgaremek.py:146: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'GarFelhasznalo1' == 'Gktest145240'\n  - Gktest145240\n  + GarFelhasznalo1",
    "statusTrace" : "self = <test_vizsgaremek.TestConduitApp object at 0x7f3bb2f86e50>\n\n    def test_register_003(self):\n        conduit_cookie(self.browser)\n        self.browser.find_element_by_xpath(\"/html/body//a[contains(@href,'register')]\").click()\n        self.browser.find_element_by_xpath(\"//input[@type='text'][@placeholder='Username']\").send_keys(\"GarFelhasznalo1\")\n        self.browser.find_element_by_xpath(\"//input[@type='text'][@placeholder='Email']\").send_keys(\"GarFelhasznalo1@gmail.com\")\n        self.browser.find_element_by_xpath(\"//input[@placeholder='Password']\").send_keys(password)\n        # time.sleep(2)\n        # self.browser.find_element_by_css_selector(\".btn.btn-lg.btn-primary.pull-xs-right\").click()\n        button_reg = find_element(self.browser, By.CSS_SELECTOR, \".btn.btn-lg.btn-primary.pull-xs-right\")\n        button_reg.click()\n        # self.browser.find_element_by_xpath('//button[@class=\"btn login-btn\"]').click()\n        welcome = find_element(self.browser, By.CSS_SELECTOR, \".swal-title\")\n    \n        # welcome = WebDriverWait(self.browser, 5).until(\n        #     EC.visibility_of_element_located((By.CSS_SELECTOR, \".swal-title\"))\n        # )\n        welcome_text = welcome.text\n        # print(welcome_text)\n        assert welcome_text == \"Welcome!\"\n        self.browser.find_element_by_css_selector(\".swal-button.swal-button--confirm\").click()\n        nav_bar_list = self.browser.find_elements_by_css_selector(\"li.nav-item\")\n        logined_name = nav_bar_list[3].text\n        # print(logined_name)\n>       assert logined_name == regname\nE       AssertionError: assert 'GarFelhasznalo1' == 'Gktest145240'\nE         - Gktest145240\nE         + GarFelhasznalo1\n\ntest_conduit/test_vizsgaremek.py:146: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e67ffaeafedb4a9d",
      "name" : "log",
      "source" : "e67ffaeafedb4a9d.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "5dbc14c8d2f373d9",
      "name" : "stderr",
      "source" : "5dbc14c8d2f373d9.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_conduit"
  }, {
    "name" : "suite",
    "value" : "test_vizsgaremek"
  }, {
    "name" : "subSuite",
    "value" : "TestConduitApp"
  }, {
    "name" : "host",
    "value" : "fv-az77-838"
  }, {
    "name" : "thread",
    "value" : "3692-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_conduit.test_vizsgaremek"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "c3de71cfe82d28ef.json",
  "parameterValues" : [ ]
}